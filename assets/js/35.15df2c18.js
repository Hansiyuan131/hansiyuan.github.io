(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{469:function(e,t,a){"use strict";a.r(t);var n=a(29),s=Object(n.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"mysql基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql基础"}},[e._v("#")]),e._v(" MySQL基础")]),e._v(" "),a("h2",{attrs:{id:"初识mysql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初识mysql"}},[e._v("#")]),e._v(" 初识Mysql")]),e._v(" "),a("blockquote",[a("p",[e._v("SQL 命令式语言 第四代语言")])]),e._v(" "),a("h3",{attrs:{id:"mysql的分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql的分类"}},[e._v("#")]),e._v(" Mysql的分类")]),e._v(" "),a("ul",[a("li",[e._v("DDL（Data Definition Language）\n"),a("ul",[a("li",[e._v("数据定义语句，这些语句定义了不同的数据段、数据库、表、列、索引等数据库对象的定义。常用的语句关键字主要包括create、drop、alter等。")])])]),e._v(" "),a("li",[e._v("DML（Data Manipulation Language）\n"),a("ul",[a("li",[e._v("数据操纵语句，用于添加、删除、更新和查询数据库记录，并检查数据完整性，常用的语句关键字主要包括insert、delete、udpate和select等。")])])]),e._v(" "),a("li",[e._v("DCL（Data Control Language）\n"),a("ul",[a("li",[e._v("数据控制语句，用于控制不同数据段直接的许可和访问级别的语句。这些语句定义了数据库、表、字段、用户的访问权限和安全级别。主要的语句关键字包括grant、revoke等")])])])]),e._v(" "),a("h3",{attrs:{id:"基本语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本语法"}},[e._v("#")]),e._v(" 基本语法")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("-- sql 语句\nselect * from table_name\n")])])]),a("ol",[a("li",[e._v("SQL 关键字不区分大小写")]),e._v(" "),a("li",[e._v("分号 ; 是区分语句的标志")]),e._v(" "),a("li",[e._v("MySQL 注释")])]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# This comment continues to the end of line\n-- This comment continues to the end of line\n\n/* this is an in-line comment */\n\n/*\nthis is a\nmultiple-line comment\n*/\n\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[e._v("推荐使用完全限定表(数据库.表名的格式)")]),e._v(" "),a("li",[e._v("常用的 SQL 语句")])]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT - extracts data from a database\nUPDATE - updates data in a database\nDELETE - deletes data from a database\nINSERT INTO - inserts new data into a database\nCREATE DATABASE - creates a new database\nALTER DATABASE - modifies a database\nDROP DATABASE - deletes a database\nCREATE TABLE - creates a new table\nALTER TABLE - modifies a table\nDROP TABLE - deletes a table\nCREATE INDEX - creates an index (search key)\nDROP INDEX - deletes an index\n")])])]),a("hr"),e._v(" "),a("h2",{attrs:{id:"sql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql"}},[e._v("#")]),e._v(" SQL")]),e._v(" "),a("h3",{attrs:{id:"ddl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ddl"}},[e._v("#")]),e._v(" DDL")]),e._v(" "),a("h4",{attrs:{id:"常用-基本了解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用-基本了解"}},[e._v("#")]),e._v(" 常用+基本了解")]),e._v(" "),a("p",[e._v("关键字：")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("create")])]),e._v(" "),a("li",[a("code",[e._v("alert")])]),e._v(" "),a("li",[a("code",[e._v("drop")])])]),e._v(" "),a("p",[e._v("数据类型：")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("text")]),e._v(" 文本类型\n"),a("ul",[a("li",[a("code",[e._v("char")]),e._v(" 定长类型")]),e._v(" "),a("li",[a("code",[e._v("varchar")]),e._v(" 可边长类型")]),e._v(" "),a("li",[a("code",[e._v("Text")])]),e._v(" "),a("li",[a("code",[e._v("LongText")])]),e._v(" "),a("li",[a("code",[e._v("BloB")]),e._v(" 存储二进制数据")]),e._v(" "),a("li",[a("code",[e._v("LongBolB")])])])]),e._v(" "),a("li",[a("code",[e._v("number")]),e._v(" 数值类型\n"),a("ul",[a("li",[a("code",[e._v("int(sIZE)")]),e._v(" 整型 size表示位数")]),e._v(" "),a("li",[a("code",[e._v("BIGINT")]),e._v(" 长整型")]),e._v(" "),a("li",[a("code",[e._v("double（3，2）")]),e._v(" 小数  共三位小数点后占两位，整数位占一位")]),e._v(" "),a("li",[a("code",[e._v("dicamal")]),e._v(" 跟金钱有关的")])])]),e._v(" "),a("li",[a("code",[e._v("Date/Time")]),e._v(" 时间类型\n"),a("ul",[a("li",[a("code",[e._v("Date")]),e._v("  YYYY-MM-DD")]),e._v(" "),a("li",[a("code",[e._v("DateTime")]),e._v(" YYYY-MM-DD HH:MI:SS")])])])]),e._v(" "),a("h4",{attrs:{id:"create"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create"}},[e._v("#")]),e._v(" Create")]),e._v(" "),a("h5",{attrs:{id:"create-db"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-db"}},[e._v("#")]),e._v(" Create DB")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("create database database_name\n")])])]),a("h5",{attrs:{id:"create-table"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-table"}},[e._v("#")]),e._v(" Create Table")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("create table table_name(\n-- 字段名 字段名 数据类型 [数据范围] [约束] 注释\n) comment '表描述'\n")])])]),a("h4",{attrs:{id:"drop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#drop"}},[e._v("#")]),e._v(" Drop")]),e._v(" "),a("p",[e._v("Drop database")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("DROP DATABASE database_name;\n")])])]),a("h5",{attrs:{id:"drop-table"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#drop-table"}},[e._v("#")]),e._v(" Drop table")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("DROP TABLE table_name;\n")])])]),a("h5",{attrs:{id:"drop-index-in-mysql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#drop-index-in-mysql"}},[e._v("#")]),e._v(" Drop index in MySQL")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ALTER TABLE table_name DROP INDEX index_name;\n")])])]),a("h5",{attrs:{id:"truncate-table"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#truncate-table"}},[e._v("#")]),e._v(" Truncate table")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("TRUNCATE TABLE table_name;\n-- Truncate是一个能够快速清空资料表内所有资料的SQL语法。 并且能针对具有自动递增值的字段，做计数重置归零重新计算的作用。\n")])])]),a("h4",{attrs:{id:"constraints"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#constraints"}},[e._v("#")]),e._v(" Constraints")]),e._v(" "),a("h5",{attrs:{id:"非空约束-not-null"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非空约束-not-null"}},[e._v("#")]),e._v(" 非空约束 Not null")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("CREATE TABLE PersonsNotNull (\nP_Id int NOT NULL,\nLastName varchar(255) NOT NULL,\nFirstName varchar(255),\nCity varchar(255)\n);\n")])])]),a("h5",{attrs:{id:"唯一约束-unique"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#唯一约束-unique"}},[e._v("#")]),e._v(" 唯一约束 Unique")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("CREATE TABLE Persons (\nP_Id int NOT NULL,\nLastName varchar(255) NOT NULL,\nFirstName varchar(255),\nCity varchar(255),\nCONSTRAINT uc_PersonID UNIQUE (P_Id,LastName)\n);\n")])])]),a("h5",{attrs:{id:"主键约束-primary-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主键约束-primary-key"}},[e._v("#")]),e._v(" 主键约束 Primary Key")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("CREATE TABLE table_name (\nid INT AUTO_INCREMENT PRIMARY KEY,\n);\n")])])]),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("CREATE TABLE Persons (\nP_Id int NOT NULL,\nLastName varchar(255) NOT NULL,\nFirstName varchar(255),\nPRIMARY KEY (P_Id)\n);\n")])])]),a("h5",{attrs:{id:"外键约束-foreign-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#外键约束-foreign-key"}},[e._v("#")]),e._v(" 外键约束 Foreign Key")]),e._v(" "),a("ul",[a("li",[e._v("主表 / 父表（主键所在的表）")]),e._v(" "),a("li",[e._v("从表 / 子表（外键所在的表）")]),e._v(" "),a("li",[e._v("必须引用主表主键")]),e._v(" "),a("li",[e._v("外键和主键数据类型一致")])]),e._v(" "),a("h5",{attrs:{id:"创建外键"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建外键"}},[e._v("#")]),e._v(" 创建外键")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("alter table db_a.enroll\n  add constraint\n    enroll_fk_activityId\n    foreign key (activityId)\n      references db_a.activity (id);\n")])])]),a("h5",{attrs:{id:"暂时禁用外键约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#暂时禁用外键约束"}},[e._v("#")]),e._v(" 暂时禁用外键约束")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("-- Try DISABLE KEYS:\nSET FOREIGN_KEY_CHECKS=0;\n\n-- make sure to\nSET FOREIGN_KEY_CHECKS=1;\n")])])]),a("h5",{attrs:{id:"缺省值-default"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缺省值-default"}},[e._v("#")]),e._v(" 缺省值 Default")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("CREATE TABLE Persons (\nP_Id int NOT NULL,\nLastName varchar(255) NOT NULL,\nCity varchar(255) DEFAULT 'Sandnes'\n)\n")])])]),a("h5",{attrs:{id:"自增-auto-increment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自增-auto-increment"}},[e._v("#")]),e._v(" 自增 Auto Increment")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("CREATE TABLE Persons (\nID int NOT NULL UNSIGNED AUTO_INCREMENT,\nPRIMARY KEY (ID)\n);\n\nALTER TABLE Persons AUTO_INCREMENT = 100;\n")])])]),a("h4",{attrs:{id:"alter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#alter"}},[e._v("#")]),e._v(" Alter")]),e._v(" "),a("h5",{attrs:{id:"rename"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rename"}},[e._v("#")]),e._v(" Rename")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ALTER TABLE old_table_name RENAME new_table_name;\n")])])]),a("h5",{attrs:{id:"add-column"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add-column"}},[e._v("#")]),e._v(" ADD COLUMN")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ALTER TABLE table_name\nADD COLUMN column_name datatype [AFTER column_name | FIRST];\n")])])]),a("h5",{attrs:{id:"drop-column"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#drop-column"}},[e._v("#")]),e._v(" DROP COLUMN")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ALTER TABLE table_name\nDROP COLUMN column_name;\n")])])]),a("h5",{attrs:{id:"modify-column"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#modify-column"}},[e._v("#")]),e._v(" MODIFY COLUMN")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ALTER TABLE table_name\nMODIFY COLUMN column_name datatype [AFTER column_name | FIRST];\n")])])]),a("h5",{attrs:{id:"add-constraint-primary-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add-constraint-primary-key"}},[e._v("#")]),e._v(" ADD CONSTRAINT PRIMARY KEY")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ALTER TABLE table_name\nADD CONSTRAINT primary_key_name PRIMARY KEY(columns);\n")])])]),a("h5",{attrs:{id:"change"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#change"}},[e._v("#")]),e._v(" CHANGE")]),e._v(" "),a("div",{staticClass:"language-msyql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ALTER TABLE table_name\nCHANGE old_column_name new_column_name datatype [AFTER column_name |\nFIRST];\n")])])]),a("h5",{attrs:{id:"add-constraint-foreign-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add-constraint-foreign-key"}},[e._v("#")]),e._v(" ADD CONSTRAINT FOREIGN KEY")]),e._v(" "),a("div",{staticClass:"language-mysq; extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ALTER TABLE table_name\nADD CONSTRAINT\nforeign_key_name\nFOREIGN KEY (columns)\nREFERENCES parent_table(columns)\nON DELETE action\nON UPDATE action;\n\n\n#       on delete cascade; -- 级联删除\n#       on delete set null ; -- 级联置空\n")])])]),a("h5",{attrs:{id:"drop-foreign-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#drop-foreign-key"}},[e._v("#")]),e._v(" DROP FOREIGN KEY")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ALTER TABLE table_name\nDROP FOREIGN KEY constraint_name;\n")])])]),a("h5",{attrs:{id:"drop-index"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#drop-index"}},[e._v("#")]),e._v(" DROP INDEX")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ALTER TABLE table_name DROP INDEX unique_column_name;\n")])])]),a("h5",{attrs:{id:"ignore"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ignore"}},[e._v("#")]),e._v(" IGNORE")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("-- Delete all duplicated rows except one\nALTER IGNORE TABLE table_name\nADD UNIQUE INDEX idx_name (column);\n")])])]),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("-- If you want to keep the row with the lowest id value:\nDELETE n1 FROM names n1, names n2 WHERE n1.id > n2.id AND n1.name = n2.name;\n-- If you want to keep the row with the highest id value:\nDELETE n1 FROM names n1, names n2 WHERE n1.id < n2.id AND n1.name = n2.name;\n")])])]),a("h4",{attrs:{id:"index"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#index"}},[e._v("#")]),e._v(" Index")]),e._v(" "),a("h5",{attrs:{id:"create-index"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-index"}},[e._v("#")]),e._v(" CREATE INDEX")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("CREATE INDEX idx_name ON table_name(column);\n")])])]),a("h5",{attrs:{id:"drop-index-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#drop-index-2"}},[e._v("#")]),e._v(" DROP INDEX")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("DROP INDEX idx_name ON table_name;\n")])])]),a("h5",{attrs:{id:"show-index"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#show-index"}},[e._v("#")]),e._v(" SHOW INDEX")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SHOW INDEX FROM table_name;\n")])])]),a("ul",[a("li",[e._v("primary key > index")]),e._v(" "),a("li",[e._v("unique > index")]),e._v(" "),a("li",[e._v("foreign key > index (only for InnoDB)")])]),e._v(" "),a("p",[e._v("Does MySQL index foreign key columns automatically?")]),e._v(" "),a("ul",[a("li",[e._v("单列索引 todo")]),e._v(" "),a("li",[e._v("组合索引 todo")])]),e._v(" "),a("hr"),e._v(" "),a("h3",{attrs:{id:"dml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dml"}},[e._v("#")]),e._v(" DML")]),e._v(" "),a("blockquote",[a("p",[e._v("语句(Data Manipulate Language)")])]),e._v(" "),a("h4",{attrs:{id:"insert"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#insert"}},[e._v("#")]),e._v(" Insert")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("INSERT INTO table_name\nVALUES (value1,value2,value3,...);\n")])])]),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("INSERT INTO table_name (column1,column2,column3,...)\nVALUES (value1,value2,value3,...);\n")])])]),a("h4",{attrs:{id:"update"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#update"}},[e._v("#")]),e._v(" Update")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("UPDATE table_name\nSET column1=value1,column2=value2,...\nWHERE some_column=some_value;\n")])])]),a("h4",{attrs:{id:"delete"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#delete"}},[e._v("#")]),e._v(" Delete")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("DELETE FROM table_name\nWHERE some_column=some_value;\n")])])]),a("h4",{attrs:{id:"import"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#import"}},[e._v("#")]),e._v(" import")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("mysql> source file_name.sql\n")])])]),a("h4",{attrs:{id:"load-导入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#load-导入"}},[e._v("#")]),e._v(" load 导入")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("LOAD DATA LOCAL INFILE 'path_to_your_csv_file'\nINTO TABLE your_db.your_table\nFIELDS TERMINATED BY ',' (column_name1, column_name2, ...)\nSET id = NULL;\n")])])]),a("h4",{attrs:{id:"dump-备份"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dump-备份"}},[e._v("#")]),e._v(" dump 备份")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("-- your_mysql_directory/bin\nmysqldump -B -u your_mysql_username -p database_name > file_name.sql\n")])])]),a("hr"),e._v(" "),a("h3",{attrs:{id:"dql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dql"}},[e._v("#")]),e._v(" DQL")]),e._v(" "),a("blockquote",[a("p",[e._v("语句(Data Query Language)")])]),e._v(" "),a("h4",{attrs:{id:"mysql-show"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql-show"}},[e._v("#")]),e._v(" MySQL Show")]),e._v(" "),a("ul",[a("li",[e._v("SHOW DATABASES; 显示服务器中所有的库")]),e._v(" "),a("li",[e._v("SHOW TABLES; 显示库中所有的表")]),e._v(" "),a("li",[e._v("SHOW TABLE STATUS FROM database_name; 显示库中所有表的信息")]),e._v(" "),a("li",[e._v("SHOW TABLE STATUS WHERE Name = ‘table_name’; 显示表的信息")]),e._v(" "),a("li",[e._v("SHOW [FULL] COLUMNS FROM table_name; 显示表中所有列的信息")]),e._v(" "),a("li",[e._v("SHOW TABLE STATUS WHERE Name = ‘table_name’; 显示表的信息")]),e._v(" "),a("li",[e._v("SHOW FULL TABLES FROM database_name; 显示库中的表和视图")]),e._v(" "),a("li",[e._v("SHOW VARIABLES; 显示变量")]),e._v(" "),a("li",[e._v("SHOW CREATE TABLE table_name; 显示建表语句")]),e._v(" "),a("li",[e._v("SHOW CREATE VIEW view_name; 显示建视图语句")]),e._v(" "),a("li",[e._v("SHOW INDEX FROM table_name; 显示表中索引信息")])]),e._v(" "),a("h4",{attrs:{id:"select"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#select"}},[e._v("#")]),e._v(" Select")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT column_name,column_name\nFROM table_name;\n")])])]),a("h4",{attrs:{id:"distinct"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#distinct"}},[e._v("#")]),e._v(" distinct")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT DISTINCT column_name,column_name\nFROM table_name;\n")])])]),a("h4",{attrs:{id:"where"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#where"}},[e._v("#")]),e._v(" where")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT column_name,column_name\nFROM table_name\nWHERE column_name operator value;\n")])])]),a("h4",{attrs:{id:"and-or"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#and-or"}},[e._v("#")]),e._v(" AND & OR")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT * FROM Customers\nWHERE Country='Germany'\nAND City='Berlin';\n")])])]),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT * FROM Customers\nWHERE City='Berlin'\nOR City='München';\n")])])]),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT * FROM Customers\nWHERE Country='Germany'\nAND (City='Berlin' OR City='München');\n")])])]),a("h4",{attrs:{id:"order-by"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#order-by"}},[e._v("#")]),e._v(" Order By")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT column_name1, column_name2\nFROM table_name\nORDER BY column_name1 ASC|DESC, column_name2 ASC|DESC;\n-- ORDER BY 1, 2\n")])])]),a("h4",{attrs:{id:"top-limit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#top-limit"}},[e._v("#")]),e._v(" Top limit")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT column_name(s)\nFROM table_name\nLIMIT number1 OFFSET number2;\n-- LIMIT number2, number1\n")])])]),a("ul",[a("li",[e._v("LIMIT 位于 ORDER BY 之后")])]),e._v(" "),a("h4",{attrs:{id:"like"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#like"}},[e._v("#")]),e._v(" Like")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT column_name(s)\nFROM table_name\nWHERE column_name [NOT] LIKE pattern;\n")])])]),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("CREATE TABLE table_name_new LIKE table_name\n")])])]),a("hr"),e._v(" "),a("h3",{attrs:{id:"dtl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dtl"}},[e._v("#")]),e._v(" DTL")]),e._v(" "),a("blockquote",[a("p",[e._v("(Data Transaction Language)")]),e._v(" "),a("p",[e._v("在数据库系统中，一个事务是指：由一系列数据库操作组成的一个完整的逻辑过程")])]),e._v(" "),a("h4",{attrs:{id:"事务的-acid-特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务的-acid-特性"}},[e._v("#")]),e._v(" 事务的 ACID 特性")]),e._v(" "),a("h5",{attrs:{id:"原子性-atomicity"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原子性-atomicity"}},[e._v("#")]),e._v(" 原子性 Atomicity")]),e._v(" "),a("p",[e._v("一个事务 transaction 中的所有操作，要么全部完成，要么全部不完成，不会结束在中间某个环节")]),e._v(" "),a("h5",{attrs:{id:"一致性-consistency"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一致性-consistency"}},[e._v("#")]),e._v(" 一致性 Consistency")]),e._v(" "),a("p",[e._v("在事务开始之前和事务结束以后，数据库的完整性没有被破坏")]),e._v(" "),a("h5",{attrs:{id:"隔离性-isolation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#隔离性-isolation"}},[e._v("#")]),e._v(" 隔离性 Isolation")]),e._v(" "),a("p",[e._v("数据库允许多个并发事务对其数据进行读写和修改的能力，隔离性可以防止多个事务并发执行时由于交叉执行而导致数据的不一致")]),e._v(" "),a("h5",{attrs:{id:"持久性-durability"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#持久性-durability"}},[e._v("#")]),e._v(" 持久性 Durability")]),e._v(" "),a("p",[e._v("事务处理结束后，对数据的修改就是永久的，即便系统故障也不会丢失")]),e._v(" "),a("h4",{attrs:{id:"开启一次事务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开启一次事务"}},[e._v("#")]),e._v(" 开启一次事务")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("START TRANSACTION;\n")])])]),a("h4",{attrs:{id:"事务处理语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务处理语句"}},[e._v("#")]),e._v(" 事务处理语句")]),e._v(" "),a("ul",[a("li",[e._v("DML 语句 insert update delete")]),e._v(" "),a("li",[e._v("DQL 语句与事务无关")])]),e._v(" "),a("h4",{attrs:{id:"显式结束事务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#显式结束事务"}},[e._v("#")]),e._v(" 显式结束事务")]),e._v(" "),a("ul",[a("li",[e._v("COMMIT; 提交")]),e._v(" "),a("li",[e._v("ROLLBACK; 回滚")])]),e._v(" "),a("h4",{attrs:{id:"隐式结束事务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#隐式结束事务"}},[e._v("#")]),e._v(" 隐式结束事务")]),e._v(" "),a("ul",[a("li",[e._v("DDL 语句")])]),e._v(" "),a("h4",{attrs:{id:"事务保留点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务保留点"}},[e._v("#")]),e._v(" 事务保留点")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SAVEPOINT save_point_name; -- 设置保留点\nROLLBACK TO save_point_name; -- 回滚到保留点，不能结束事务\nSET AUTOCOMMIT = 0;\nSET AUTOCOMMIT = 1;\n")])])]),a("hr"),e._v(" "),a("h3",{attrs:{id:"dcl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dcl"}},[e._v("#")]),e._v(" DCL")]),e._v(" "),a("blockquote",[a("p",[e._v("(Data Control Language)")])]),e._v(" "),a("h4",{attrs:{id:"创建用户"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建用户"}},[e._v("#")]),e._v(" 创建用户")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("-- 创建用户\nCREATE USER your_username@'localhost' IDENTIFIED BY 'some_password';\n-- 改用户名\nRENAME USER your_username@'localhost' TO new_your_username@'localhos\nt';\n-- 更改密码\nSET PASSWORD [FOR your_username] = PASSWORD('new_your_password');\n-- 删除用户\nDROP USER your_username;\n")])])]),a("h4",{attrs:{id:"权限"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#权限"}},[e._v("#")]),e._v(" 权限")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("-- 显示权限信息\nSHOW GRANTS FOR your_username@'localhost';\n-- 授予权限\nGRANT some_privileges ON some_databases(some_tables) TO some_users@'l\nocalhost';\n-- 撤销权限\nREVOKE some_privileges ON some_databases(some_tables) FROM some_users\n@'localhost';\n-- 刷新权限\nFLUSH PRIVILEGES;\n-- 权限粒度\nGRANT ALL\nREVOKE ALL\nON database_name.*\nON database_name.table_name\n")])])]),a("hr"),e._v(" "),a("h2",{attrs:{id:"数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[e._v("#")]),e._v(" 数据类型")]),e._v(" "),a("p",[e._v("text, number, and Date/Time")]),e._v(" "),a("h3",{attrs:{id:"text-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#text-types"}},[e._v("#")]),e._v(" Text types")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("数据类型")]),e._v(" "),a("th",[e._v("含义")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("char(n)")]),e._v(" "),a("td",[e._v("固定长度，最多255个字符")])]),e._v(" "),a("tr",[a("td",[a("strong",[e._v("varchar(n)")])]),e._v(" "),a("td",[a("strong",[e._v("固定长度，最多65535个字符")])])]),e._v(" "),a("tr",[a("td",[e._v("tinytext")]),e._v(" "),a("td",[e._v("可变长度，最多255个字符")])]),e._v(" "),a("tr",[a("td",[e._v("text")]),e._v(" "),a("td",[e._v("可变长度，最多65535个字符")])]),e._v(" "),a("tr",[a("td",[e._v("mediumtext")]),e._v(" "),a("td",[e._v("可变长度，最多2的24次方-1个字符")])]),e._v(" "),a("tr",[a("td",[e._v("longtext")]),e._v(" "),a("td",[e._v("可变长度，最多2的32次方-1个字符")])])])]),e._v(" "),a("h4",{attrs:{id:"char和varchar"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#char和varchar"}},[e._v("#")]),e._v(" char和varchar")]),e._v(" "),a("ol",[a("li",[e._v("char(n) 若存入字符数小于n，则以空格补于其后，查询之时再将空格去掉。所以char类型存储的字符串末尾不能有空格，varchar不限于此。")]),e._v(" "),a("li",[e._v("char(n) 固定长度，char(4)不管是存入几个字符，都将占用4个字节，varchar是存入的实际字符数+1个字节（n<=255）或2个字节(n>255)，所以varchar(4),存入3个字符将占用4个字节。")]),e._v(" "),a("li",[e._v("char类型的字符串检索速度要比varchar类型的快。")])]),e._v(" "),a("h4",{attrs:{id:"varchar和text"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#varchar和text"}},[e._v("#")]),e._v(" varchar和text")]),e._v(" "),a("ol",[a("li",[e._v("varchar可指定n，text不能指定，内部存储varchar是存入的实际字符数+1个字节（n<=255）或2个字节(n>255)，text是实际字符数+2个字节。")]),e._v(" "),a("li",[e._v("text类型不能有默认值。")]),e._v(" "),a("li",[e._v("varchar可直接创建索引，text创建索引要指定前多少个字符。varchar查询速度快于text,在都创建索引的情况下，text的索引似乎不起作用。")])]),e._v(" "),a("h3",{attrs:{id:"number-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#number-types"}},[e._v("#")]),e._v(" Number types")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("数据类型")]),e._v(" "),a("th",[e._v("描述")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("tinyint(m)")]),e._v(" "),a("td",[e._v("1个字节  范围(-128~127)")])]),e._v(" "),a("tr",[a("td",[e._v("smallint(m)")]),e._v(" "),a("td",[e._v("2个字节  范围(-32768~32767)")])]),e._v(" "),a("tr",[a("td",[e._v("mediumint(m)")]),e._v(" "),a("td",[e._v("3个字节  范围(-8388608~8388607)")])]),e._v(" "),a("tr",[a("td",[a("strong",[e._v("int(m)")])]),e._v(" "),a("td",[e._v("4个字节  范围(-2147483648~2147483647)")])]),e._v(" "),a("tr",[a("td",[e._v("bigint(m)")]),e._v(" "),a("td",[e._v("8个字节  范围"),a("code",[e._v("(+-9.22*10的18次方)")])])]),e._v(" "),a("tr",[a("td",[e._v("float(m,d)")]),e._v(" "),a("td",[e._v("单精度浮点型    8位精度(4字节)     m总个数，d小数位")])]),e._v(" "),a("tr",[a("td",[a("strong",[e._v("double(m,d)")])]),e._v(" "),a("td",[e._v("双精度浮点型    16位精度(8字节)    m总个数，d小数位")])]),e._v(" "),a("tr",[a("td",[a("strong",[e._v("DECIMAL(size,d)")])]),e._v(" "),a("td",[e._v("参数m<65 是总个数，d<30且 d<m 是小数位。")])])])]),e._v(" "),a("blockquote",[a("p",[e._v("INT(size)\nThe size is just the display width, that is used when the field has ZEROFILL specified.")])]),e._v(" "),a("ul",[a("li",[e._v("浮点型在数据库中存放的是近似值，而定点类型在数据库中存放的是精确值。")]),e._v(" "),a("li",[e._v("设一个字段定义为float(5,3)，如果插入一个数123.45678,实际数据库里存的是123.457，但总个数还以实际为准，即6位。")]),e._v(" "),a("li",[e._v("取值范围如果加了unsigned，则最大值翻倍，如tinyint unsigned的取值范围为(0~256)。")])]),e._v(" "),a("h3",{attrs:{id:"date-types"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#date-types"}},[e._v("#")]),e._v(" Date types")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("数据类型")]),e._v(" "),a("th",[e._v("描述")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[a("strong",[e._v("date")])]),e._v(" "),a("td",[e._v("日期 '2008-12-2'")])]),e._v(" "),a("tr",[a("td",[e._v("time")]),e._v(" "),a("td",[e._v("时间 '12:25:36'")])]),e._v(" "),a("tr",[a("td",[a("strong",[e._v("datetime")])]),e._v(" "),a("td",[e._v("日期时间 '2008-12-2 22:06:44'")])]),e._v(" "),a("tr",[a("td",[e._v("timestamp")]),e._v(" "),a("td",[e._v("自动存储记录修改时间")])])])]),e._v(" "),a("ul",[a("li",[e._v("若定义一个字段为timestamp，这个字段里的时间数据会随其他字段修改的时候自动刷新，所以这个数据类型的字段可以存放这条记录最后被修改的时间。")])]),e._v(" "),a("hr"),e._v(" "),a("h2",{attrs:{id:"sql函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql函数"}},[e._v("#")]),e._v(" SQL函数")]),e._v(" "),a("h3",{attrs:{id:"聚合函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#聚合函数"}},[e._v("#")]),e._v(" 聚合函数")]),e._v(" "),a("blockquote",[a("p",[e._v("Aggregate function")])]),e._v(" "),a("ul",[a("li",[e._v("AVG(col) 返回指定列的平均值")]),e._v(" "),a("li",[e._v("COUNT(col) 返回指定列中非NULL值的个数")]),e._v(" "),a("li",[e._v("MIN(col) 返回指定列的最小值")]),e._v(" "),a("li",[e._v("MAX(col) 返回指定列的最大值")]),e._v(" "),a("li",[e._v("SUM(col) 返回指定列的所有值之和")]),e._v(" "),a("li",[e._v("GROUP_CONCAT(col) 返回由属于一组的列值连接组合而成的结果")]),e._v(" "),a("li",[e._v("FIRST()")]),e._v(" "),a("li",[e._v("LAST()")]),e._v(" "),a("li",[e._v("SQL Group By 组查询")]),e._v(" "),a("li",[e._v("SELECT aggregate_function(column_name)")]),e._v(" "),a("li",[e._v("GROUP BY cloumn_name;把 column_name 列值相同的分为一组")]),e._v(" "),a("li",[e._v("HAVING 组检索")])]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("GROUP_CONCAT([DISTINCT] column_name [Order BY ASC/DESC column_name]\n[Separator ‘分隔符’])\nSET group_concat_max_len = 2048 -- default 1024\n")])])]),a("h3",{attrs:{id:"标量函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标量函数"}},[e._v("#")]),e._v(" 标量函数")]),e._v(" "),a("blockquote",[a("p",[e._v("Scalar function")])]),e._v(" "),a("h4",{attrs:{id:"数学函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数学函数"}},[e._v("#")]),e._v(" 数学函数")]),e._v(" "),a("ul",[a("li",[e._v("ABS(x) 返回 x 的绝对值")]),e._v(" "),a("li",[e._v("BIN(x) 返回 x 的二进制（OCT 返回八进制，HEX 返回十六进制）")]),e._v(" "),a("li",[e._v("CEILING(x) 返回大于 x 的最小整数值")]),e._v(" "),a("li",[e._v("EXP(x) 返回值 e（自然对数的底）的 x 次方")]),e._v(" "),a("li",[e._v("FLOOR(x) 返回小于 x 的最大整数值")]),e._v(" "),a("li",[e._v("GREATEST(x1,x2,…,xn) 返回集合中最大的值")]),e._v(" "),a("li",[e._v("LEAST(x1,x2,…,xn) 返回集合中最小的值")]),e._v(" "),a("li",[e._v("LN(x) 返回 x 的自然对数")]),e._v(" "),a("li",[e._v("LOG(x,y) 返回 x 的以 y 为底的对数")]),e._v(" "),a("li",[e._v("MOD(x,y) 返回 x / y 的模（余数）")]),e._v(" "),a("li",[e._v("PI() 返回 PI 的值（圆周率）")]),e._v(" "),a("li",[e._v("RAND() 返回 ０ 到 １ 内的随机值,可以通过提供一个种子参数使随机数生成器生成一个指定的值")]),e._v(" "),a("li",[e._v("ROUND(x,y) 返回参数 x 的四舍五入的有 y 位小数的值")]),e._v(" "),a("li",[e._v("SIGN(x) 返回代表数字 x 的符号的值")]),e._v(" "),a("li",[e._v("SQRT(x) 返回一个数的平方根")]),e._v(" "),a("li",[e._v("TRUNCATE(x,y) 返回数字 x 截短为 y 位小数的结果")])]),e._v(" "),a("h4",{attrs:{id:"字符串函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串函数"}},[e._v("#")]),e._v(" 字符串函数")]),e._v(" "),a("ul",[a("li",[e._v("ASCII(char) 返回字符的 ASCII 码值")]),e._v(" "),a("li",[e._v("BIT_LENGTH(str) 返回字符串的比特长度")]),e._v(" "),a("li",[e._v("CONCAT(s1,s2…,sn) 将 s1,s2...,sn 连接成字符串")]),e._v(" "),a("li",[e._v("CONCAT_WS(sep,s1,s2…,sn) 将 s1,s2...,sn 连接成字符串，并用 sep 字符间隔")]),e._v(" "),a("li",[e._v("INSERT(str,x,y,instr) 将字符串 str 从第 x 位置开始，y 个字符长的子串替换为字符串")]),e._v(" "),a("li",[e._v("instr")]),e._v(" "),a("li",[e._v("FIND_IN_SET(str,list) 分析逗号分隔的 list 列表，如果发现 str，返回 str 在 list")]),e._v(" "),a("li",[e._v("中的位置")]),e._v(" "),a("li",[e._v("LCASE(str)或LOWER(str) 返回将字符串 str 中所有字符改变为小写后的结果")]),e._v(" "),a("li",[e._v("LEFT(str,x) 返回字符串 str 中最左边的 x 个字符")]),e._v(" "),a("li",[e._v("LENGTH(s) 返回字符串 str 中的字符数")]),e._v(" "),a("li",[e._v("LTRIM(str) 从字符串 str 中切掉开头的空格")]),e._v(" "),a("li",[e._v("POSITION(substr,str) 返回子串 substr 在字符串 str 中第一次出现的位置")]),e._v(" "),a("li",[e._v("QUOTE(str) 用反斜杠转义 str 中的单引号")]),e._v(" "),a("li",[e._v("REPEAT(str,srchstr,rplcstr) 返回字符串 str 重复 x 次的结果")]),e._v(" "),a("li",[e._v("REVERSE(str) 返回颠倒字符串 str 的结果")]),e._v(" "),a("li",[e._v("RIGHT(str,x) 返回字符串 str 中最右边的 x 个字符")]),e._v(" "),a("li",[e._v("RTRIM(str) 返回字符串 str 尾部的空格STRCMP(s1,s2) 比较字符串 s1 和 s2")]),e._v(" "),a("li",[e._v("TRIM(str) 去除字符串首部和尾部的所有空格")]),e._v(" "),a("li",[e._v("UCASE(str)或UPPER(str) 返回将字符串 str 中所有字符转变为大写后的结果")])]),e._v(" "),a("h4",{attrs:{id:"日期和时间函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日期和时间函数"}},[e._v("#")]),e._v(" 日期和时间函数")]),e._v(" "),a("ul",[a("li",[e._v("CURDATE()或CURRENT_DATE() 返回当前的日期")]),e._v(" "),a("li",[e._v("CURTIME()或CURRENT_TIME() 返回当前的时间")]),e._v(" "),a("li",[e._v("DATE_ADD(date,INTERVAL int keyword) 返回日期 date 加上间隔时间 int 的结果")]),e._v(" "),a("li",[e._v("DATE_FORMAT(date,fmt) 依照指定的 fmt 格式格式化日期 date 值")]),e._v(" "),a("li",[e._v("DATE_SUB(date,INTERVAL int keyword) 返回日期 date 加上间隔时间 int 的结果")]),e._v(" "),a("li",[e._v("DAYOFWEEK(date) 返回 date 所代表的一星期中的第几天(1~7)")]),e._v(" "),a("li",[e._v("DAYOFMONTH(date) 返回 date 是一个月的第几天(1~31)")]),e._v(" "),a("li",[e._v("DAYOFYEAR(date) 返回 date 是一年的第几天(1~366)")]),e._v(" "),a("li",[e._v("DAYNAME(date) 返回 date 的星期名，如：SELECT DAYNAME(CURRENT_DATE);")]),e._v(" "),a("li",[e._v("FROM_UNIXTIME(ts,fmt) 根据指定的 fmt 格式，格式化 UNIX 时间戳 ts")]),e._v(" "),a("li",[e._v("HOUR(time) 返回 time 的小时值(0~23)")]),e._v(" "),a("li",[e._v("MINUTE(time) 返回 time 的分钟值(0~59)")]),e._v(" "),a("li",[e._v("MONTH(date) 返回 date 的月份值(1~12)")]),e._v(" "),a("li",[e._v("MONTHNAME(date) 返回 date 的月份名")]),e._v(" "),a("li",[e._v("NOW() 返回当前的日期和时间")]),e._v(" "),a("li",[e._v("QUARTER(date) 返回 date 在一年中的季度(1~4)")]),e._v(" "),a("li",[e._v("WEEK(date) 返回日期 date 为一年中第几周(0~53)")]),e._v(" "),a("li",[e._v("YEAR(date) 返回日期 date 的年份(1000~9999)")])]),e._v(" "),a("hr"),e._v(" "),a("h2",{attrs:{id:"数据库设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库设计"}},[e._v("#")]),e._v(" 数据库设计")]),e._v(" "),a("h3",{attrs:{id:"数据库的设计-范式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据库的设计-范式"}},[e._v("#")]),e._v(" 数据库的设计 - 范式")]),e._v(" "),a("blockquote",[a("p",[e._v("NF 规范的形式")])]),e._v(" "),a("ol",[a("li",[e._v("1NF: 没有复义的列 "),a("code",[e._v("添加列")])]),e._v(" "),a("li",[e._v("2NF: 每行可以区分 "),a("code",[e._v("加主键")])]),e._v(" "),a("li",[e._v("3NF: 没有冗余的列 "),a("code",[e._v("添加表")])])]),e._v(" "),a("blockquote",[a("p",[e._v("3NF: 表中不能含有其他表的非主关键字值")])]),e._v(" "),a("h3",{attrs:{id:"电商网站"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#电商网站"}},[e._v("#")]),e._v(" 电商网站")]),e._v(" "),a("ol",[a("li",[e._v("电商网站")])]),e._v(" "),a("ul",[a("li",[e._v("db_ec")]),e._v(" "),a("li",[e._v("tables\n"),a("ul",[a("li",[e._v("user")]),e._v(" "),a("li",[e._v("product")]),e._v(" "),a("li",[e._v("order")])])])]),e._v(" "),a("p",[e._v("参考网"),a("a",{attrs:{href:"http://you.163.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("网易-严选"),a("OutboundLink")],1)]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("drop database if exists db_ec;\ncreate database db_ec;\n\n-- user table\ndrop table if exists db_ec.user;\ncreate table db_ec.user\n(\n  id       int auto_increment primary key comment 'id PK',\n  email    varchar(255) not null unique comment 'email NN UN',\n  password varchar(255) not null comment 'password NN',\n  mobile   varchar(255) not null unique comment 'mobile NN UN'\n) comment 'user table';\n\n-- user table\ndrop table if exists db_ec.user_info;\ncreate table db_ec.user_info\n(\n  id     int auto_increment primary key comment 'id PK',\n  avatar varchar(255) comment 'avatar',\n  gender char(2) comment 'gender',\n  city   varchar(255) comment 'city',\n  userId int comment 'user id FK'\n) comment 'user info table';\n\n-- category table\ndrop table if exists db_ec.category;\ncreate table db_ec.category\n(\n  id         int auto_increment primary key comment 'id PK',\n  title      varchar(255) not null comment 'title NN',\n  picture    varchar(255) comment 'category picture',\n  categoryId int comment 'parent category id FK'\n) comment 'category table';\n\n-- product table\ndrop table if exists db_ec.product;\ncreate table db_ec.product\n(\n  id            int auto_increment primary key comment 'id PK',\n  title         varchar(255)  not null comment 'title NN',\n  price         decimal(8, 2) not null comment 'price NN',\n  originalPrice decimal(8, 2) comment 'original price',\n  -- ...\n  -- slidePictures text not null comment 'slide pictures', -- '1.jpg 2.jpg 3.jpg 4.jpg 5.jpg'\n  -- detail pictures ?\n  categoryId    int comment 'category id FK'\n) comment 'product table';\n\n\n-- pictures table\ndrop table if exists db_ec.pictures;\ncreate table db_ec.pictures\n(\n  id        int auto_increment primary key comment 'id PK',\n  title     varchar(255) not null unique comment 'title NN UN',\n  type      int(1)       not null comment 'type: 1-slide picture 2-detail picture',\n  productId int comment 'product id FK'\n) comment 'pictures table';\n\n\nalter table db_ec.user_info\n  add constraint\n    user_info_fk_userId\n    foreign key (userId)\n      references db_ec.user (id);\n\nalter table db_ec.category\n  add constraint\n    category_fk_categoryId\n    foreign key (categoryId)\n      references db_ec.category (id);\n\nalter table db_ec.product\n  add constraint\n    product_fk_categoryId\n    foreign key (categoryId)\n      references db_ec.category (id);\n\nalter table db_ec.pictures\n  add constraint\n    pictures_fk_productId\n    foreign key (productId)\n      references db_ec.product (id);\n\n\nselect *\nfrom db_ec.user;\n\nselect *\nfrom db_ec.user_info;\n\nselect *\nfrom db_ec.category;\n\nselect *\nfrom db_ec.product;\n\nselect *\nfrom db_ec.pictures;\n")])])]),a("h3",{attrs:{id:"春游报名系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#春游报名系统"}},[e._v("#")]),e._v(" 春游报名系统")]),e._v(" "),a("ul",[a("li",[e._v("管理员登录之后，添加活动名称，可以对活动进行 CRUD")]),e._v(" "),a("li",[e._v("学生注册")]),e._v(" "),a("li",[e._v("学生登录之后，选择自己想参加的活动，报名")]),e._v(" "),a("li",[e._v("管理员登录之后，查询学生报名情况，也可以选择活动，查看这个活动的报名情况")])]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("drop database if exists db_a;\ncreate database db_a;\n\ndrop table if exists db_a.user;\ncreate table db_a.user\n(\n  id       int auto_increment primary key comment 'id PK',\n  username varchar(255) not null comment 'username NN',\n  password varchar(255) not null comment 'password NN',\n  role     int(1)       not null default 0 comment 'role 0-student 1-admin NN'\n) comment 'user table';\n\ndrop table if exists db_a.activity;\ncreate table db_a.activity\n(\n  id    int auto_increment primary key comment 'id PK',\n  title varchar(255) not null comment 'activity title NN'\n) comment 'activity table';\n\ndrop table if exists db_a.enroll;\ncreate table db_a.enroll\n(\n  id         int auto_increment primary key comment 'id PK',\n  time       datetime not null default now() comment 'enroll time NN',\n  userId     int      not null comment 'user id FK',\n  activityId int      not null comment 'activity id FK'\n) comment 'enroll table';\n\nalter table db_a.enroll\n  add constraint\n    enroll_fk_userId\n    foreign key (userId)\n      references db_a.user (id);\n\nalter table db_a.enroll\n  add constraint\n    enroll_fk_activityId\n    foreign key (activityId)\n      references db_a.activity (id);\n\n-- add admin\ninsert into db_a.user value (null, 'admin', md5('123'), 1);\n\n-- admin sign in 'xxx', 'yyy'\nselect *\nfrom db_a.user\nwhere username = 'admin'\n  and password = md5('123');\n\n-- create\ninsert into db_a.activity value (null, '植物园一日游');\ninsert into db_a.activity value (null, '动物园一日游');\n\n-- delete\ndelete\nfrom db_a.activity\nwhere id = 1;\n\n-- update\nupdate db_a.activity\nset title = ''\nwhere id = 1;\n\n-- retrieve\nselect *\nfrom activity;\n\n\n-- student sign up\ninsert into db_a.user(username, password) value ('Tom', md5('abc'));\ninsert into db_a.user(username, password) value ('Jerry', md5('def'));\ninsert into db_a.user(username, password) value ('Tester', md5('ghi'));\n\n\n-- student sign in 'xxx', 'yyy'\nselect *\nfrom db_a.user\nwhere username = 'jerry'\n  and password = md5('def');\n\n# delete from db_a.user;\n# set foreign_key_checks = 0;\n# set foreign_key_checks = 1;\n# truncate db_a.user;\n\n-- student enroll\ninsert into db_a.enroll(id, userId, activityId) value (null, 2, 1);\ninsert into db_a.enroll(id, userId, activityId) value (null, 3, 2);\n\n-- admin sign in retrieve\nselect u.username, a.title\nfrom db_a.user u\n       inner join db_a.enroll e\n                  on u.id = e.userId\n       inner join db_a.activity a\n                  on e.activityId = a.id;\n\nselect u.username, a.title\nfrom db_a.user u\n       inner join db_a.enroll e\n                  on u.id = e.userId\n       inner join db_a.activity a\n                  on e.activityId = a.id\nwhere a.id = 1;\n\nselect *\nfrom db_a.user;\nselect *\nfrom db_a.activity;\nselect *\nfrom db_a.enroll;\n")])])]),a("hr"),e._v(" "),a("h2",{attrs:{id:"索引的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#索引的使用"}},[e._v("#")]),e._v(" 索引的使用")]),e._v(" "),a("ul",[a("li",[e._v("什么叫做索引？索引有什么用？\n"),a("ul",[a("li",[e._v("表的数据量比较小  不创建索引")])])]),e._v(" "),a("li",[e._v("索引存在的缺点/弊端")]),e._v(" "),a("li",[e._v("什么情况？什么列适合创建索引。\n"),a("ul",[a("li",[e._v("值相对离散")])])])]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("show index from scott.emp;\n-- MySQL, Primary key & Foreign key 默认为索引\n\ncreate index idx_ename on scott.emp (ENAME);\n\ndrop index idx_ename on scott.emp;\n\nshow index from db_school.student;\n\nselect ENAME\nfrom scott.emp;\n\n-- 如果 index 只有好处，没有必要存在这个概念\ncreate index ind_password on db_csdn.user(password); -- 434176 KB\ncreate index ind_username on db_csdn.user(username); -- 434176 KB\ncreate index ind_email on db_csdn.user(email); -- 434176 KB\n\nshow index from db_csdn.user;\n\nselect password, count(password)\nfrom db_csdn.user\ngroup by password\norder by 2 desc\nlimit 10 offset 0;\n\nselect *\nfrom db_csdn.user\nlimit 100 offset 0;\n\nselect password\nfrom db_csdn.user\nwhere password regexp '^\\198[0-9]{1}[0-9]{1,2}[0-9]{1,2}$';\n")])])]),a("hr"),e._v(" "),a("h2",{attrs:{id:"实战"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实战"}},[e._v("#")]),e._v(" 实战")]),e._v(" "),a("h3",{attrs:{id:"ip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ip"}},[e._v("#")]),e._v(" IP")]),e._v(" "),a("blockquote",[a("p",[e._v("将IP Address导入mysql数据库")]),e._v(" "),a("p",[e._v("IP  Internet  Protocol  互联网协议")])]),e._v(" "),a("ol",[a("li",[e._v("IPv4\n"),a("ul",[a("li",[e._v("范围i在"),a("code",[e._v("[0-255]")]),e._v("   例如"),a("code",[e._v("192.168.1.1")])]),e._v(" "),a("li",[e._v("地址不太够")])])]),e._v(" "),a("li",[e._v("IPv6（暂时不考虑）")])]),e._v(" "),a("h4",{attrs:{id:"load"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#load"}},[e._v("#")]),e._v(" Load")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("LOAD DATA LOCAL INFILE 'path_to_your_csv_file'\nINTO TABLE your_db.your_table\nFIELDS TERMINATED BY ',' (column_name1, column_name2, ...)\nSET id = NULL;\n")])])]),a("h4",{attrs:{id:"什么是csv？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是csv？"}},[e._v("#")]),e._v(" 什么是csv？")]),e._v(" "),a("h4",{attrs:{id:"使用正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用正则表达式"}},[e._v("#")]),e._v(" 使用正则表达式")]),e._v(" "),a("p",[e._v("使用正则表达式替换IP中的数据\n"),a("code",[e._v("(\\d+\\.\\d+\\.\\d+\\.\\d+)")]),e._v("\n替换为\n"),a("code",[e._v("$1|")])]),e._v(" "),a("p",[e._v("转为UTF-8， 保存")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("drop database if exists db_ip;\ncreate database db_ip;\n\ndrop table if exists db_ip.ip;\ncreate table db_ip.ip\n(\n  id  int auto_increment primary key comment 'id PK',\n  min varchar(255) not null comment 'min ip NN',\n  max varchar(255) not null comment 'max ip NN',\n  loc varchar(255) not null comment 'location NN'\n) comment 'ip address table';\n\nload data local infile 'd:/ip.txt'\n  into table db_ip.ip\n  fields terminated by '|'\n  (min, max, loc)\n  set id = null;\n\nselect *\nfrom db_ip.ip;\n\nselect count(*)\nfrom db_ip.ip;\n\nupdate db_ip.ip\nset min = trim(min),\n    max = trim(max),\n    loc = trim(loc);\n\n-- 166.111.3.207\n-- SQL\n\nselect inet_aton('166.111.3.207'); -- inet: internet aton: address to number\nselect inet_ntoa(2792293327);\n\nselect loc\nfrom db_ip.ip\nwhere inet_aton('166.111.3.207') between inet_aton(min) and inet_aton(max);\n")])])]),a("hr"),e._v(" "),a("h3",{attrs:{id:"user"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#user"}},[e._v("#")]),e._v(" User")]),e._v(" "),a("blockquote",[a("p",[e._v("CSDN密码账号导入数据库")])]),e._v(" "),a("ul",[a("li",[a("p",[e._v("数据导入 MySQL 数据库")])]),e._v(" "),a("li",[a("p",[e._v("查询")]),e._v(" "),a("ul",[a("li",[e._v("各列值的快速模糊查询")]),e._v(" "),a("li",[e._v("排名前十的密码")]),e._v(" "),a("li",[e._v("排名前十的邮箱")]),e._v(" "),a("li",[e._v("用户名和邮箱名相同的数据")]),e._v(" "),a("li",[e._v("密码可能是生日的数据\n"),a("ul",[a("li",[e._v("哪一年出生的用户最多")]),e._v(" "),a("li",[e._v("哪个星座的用户最多")])])]),e._v(" "),a("li",[e._v("密码是 QQ 号的")]),e._v(" "),a("li",[e._v("密码是手机号的\n"),a("ul",[a("li",[e._v("哪个运营商的用户最多")])])]),e._v(" "),a("li",[e._v("弱密码用户数据")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" 短密码\n 纯数字密码\n 纯字母密码\n")])])]),a("ul",[a("li",[e._v("强密码用户数据")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" 长密码\n 字母和数字\n 含特殊符号\n")])])])])]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("drop database if exists db_csdn;\ncreate database db_csdn;\n\ndrop table if exists db_csdn.user;\ncreate table db_csdn.user\n(\n  id       int auto_increment primary key comment 'id PK',\n  username varchar(255) not null comment 'username NN',\n  password varchar(255) not null comment 'password NN',\n  email    varchar(255) not null comment 'email NN'\n) comment 'user table';\n\nload data local infile 'd:/csdn.txt'\n  into table db_csdn.user\n  fields terminated by '❤'\n  (username, password, email)\n  set id = null;\n\nselect *\nfrom db_csdn.user;\n\n-- 查询排名前十的密码？\n\nselect password, count(password)\nfrom db_csdn.user\ngroup by password\norder by 2 desc\nlimit 10 offset 0;\n\nselect *\nfrom db_csdn.user\nwhere password like '%ppnn13_dkstFeb.1st%';\n\n\nselect md5('123Asd!@#123Asd!@#');\n\nselect *\nfrom db_csdn.user;\n")])])]),a("hr"),e._v(" "),a("h2",{attrs:{id:"sql语句练习"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql语句练习"}},[e._v("#")]),e._v(" SQL语句练习")]),e._v(" "),a("h3",{attrs:{id:"练习数据库创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#练习数据库创建"}},[e._v("#")]),e._v(" 练习数据库创建")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("-- MySQL dump 10.13  Distrib 5.6.30, for Win32 (AMD64)\n--\n-- Host: localhost    Database: scott\n-- ------------------------------------------------------\n-- Server version\t5.6.30\n\n/*!40101 SET @OLD_CHARACTER_SET_CLIENT = @@CHARACTER_SET_CLIENT */;\n/*!40101 SET @OLD_CHARACTER_SET_RESULTS = @@CHARACTER_SET_RESULTS */;\n/*!40101 SET @OLD_COLLATION_CONNECTION = @@COLLATION_CONNECTION */;\n/*!40101 SET NAMES utf8 */;\n/*!40103 SET @OLD_TIME_ZONE = @@TIME_ZONE */;\n/*!40103 SET TIME_ZONE = '+00:00' */;\n/*!40014 SET @OLD_UNIQUE_CHECKS = @@UNIQUE_CHECKS, UNIQUE_CHECKS = 0 */;\n/*!40014 SET @OLD_FOREIGN_KEY_CHECKS = @@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS = 0 */;\n/*!40101 SET @OLD_SQL_MODE = @@SQL_MODE, SQL_MODE = 'NO_AUTO_VALUE_ON_ZERO' */;\n/*!40111 SET @OLD_SQL_NOTES = @@SQL_NOTES, SQL_NOTES = 0 */;\n\n--\n-- Current Database: `scott`\n--\nDROP DATABASE IF EXISTS `scott`;\nCREATE DATABASE /*!32312 IF NOT EXISTS */ `scott` /*!40100 DEFAULT CHARACTER SET utf8 */;\n\nUSE `scott`;\n\n--\n-- Table structure for table `dept`\n--\n\nDROP TABLE IF EXISTS `dept`;\n/*!40101 SET @saved_cs_client = @@character_set_client */;\n/*!40101 SET character_set_client = utf8 */;\nCREATE TABLE `dept` (\n  `DEPTNO` INT(2) NOT NULL,\n  `DNAME`  VARCHAR(14) DEFAULT NULL,\n  `LOC`    VARCHAR(13) DEFAULT NULL,\n  PRIMARY KEY (`DEPTNO`)\n)\n  ENGINE = InnoDB\n  DEFAULT CHARSET = utf8;\n/*!40101 SET character_set_client = @saved_cs_client */;\n\n--\n-- Dumping data for table `dept`\n--\n\nLOCK TABLES `dept` WRITE;\n/*!40000 ALTER TABLE `dept`\n  DISABLE KEYS */;\nINSERT INTO `dept` VALUES (10, 'ACCOUNTING', 'NEW YORK'), (20, 'RESEARCH', 'DALLAS'), (30, 'SALES', 'CHICAGO'),\n  (40, 'OPERATIONS', 'BOSTON');\n/*!40000 ALTER TABLE `dept`\n  ENABLE KEYS */;\nUNLOCK TABLES;\n\n--\n-- Table structure for table `emp`\n--\n\nDROP TABLE IF EXISTS `emp`;\n/*!40101 SET @saved_cs_client = @@character_set_client */;\n/*!40101 SET character_set_client = utf8 */;\nCREATE TABLE `emp` (\n  `EMPNO`    INT(4) NOT NULL,\n  `ENAME`    VARCHAR(10)  DEFAULT NULL,\n  `JOB`      VARCHAR(9)   DEFAULT NULL,\n  `MGR`      INT(4)       DEFAULT NULL,\n  `HIREDATE` DATE         DEFAULT NULL,\n  `SAL`      DOUBLE(7, 2) DEFAULT NULL,\n  `COMM`     DOUBLE(7, 2) DEFAULT NULL,\n  `DEPTNO`   INT(2)       DEFAULT NULL,\n  PRIMARY KEY (`EMPNO`),\n  KEY `FK_emp_deptno` (`DEPTNO`),\n  CONSTRAINT `FK_emp_deptno` FOREIGN KEY (`DEPTNO`) REFERENCES `dept` (`DEPTNO`)\n)\n  ENGINE = InnoDB\n  DEFAULT CHARSET = utf8;\n/*!40101 SET character_set_client = @saved_cs_client */;\n\n--\n-- Dumping data for table `emp`\n--\n\nLOCK TABLES `emp` WRITE;\n/*!40000 ALTER TABLE `emp`\n  DISABLE KEYS */;\nINSERT INTO `emp` VALUES (7499, 'ALLEN', 'SALESMAN', 7698, '1981-02-20', 1600.00, 300.00, 30),\n  (7521, 'WARD', 'SALESMAN', 7698, '1981-02-22', 1250.00, 500.00, 30),\n  (7566, 'JONES', 'MANAGER', 7839, '1981-04-02', 2975.00, NULL, 20),\n  (7654, 'MARTIN', 'SALESMAN', 7698, '1981-09-28', 1250.00, 1400.00, 30),\n  (7698, 'BLAKE', 'MANAGER', 7839, '1981-05-01', 2850.00, NULL, 30),\n  (7782, 'CLARK', 'MANAGER', 7839, '1981-06-09', 2450.00, NULL, 10),\n  (7788, 'SCOTT', 'ANALYST', 7566, '1987-07-13', 3000.00, NULL, 20),\n  (7839, 'KING', 'PRESIDENT', NULL, '1981-11-30', 5000.00, NULL, NULL),\n  (7844, 'TURNER', 'SALESMAN', 7698, '1981-09-08', 1500.00, 0.00, 30),\n  (7876, 'ADAMS', 'CLERK', 7788, '1987-07-13', 1100.00, NULL, 20),\n  (7900, 'JAMES', 'CLERK', 7698, '1981-12-03', 950.00, NULL, 30),\n  (7902, 'FORD', 'ANALYST', 7566, '1981-12-03', 3000.00, NULL, 20),\n  (7934, 'MILLER', 'CLERK', 7782, '1982-01-23', 1300.00, NULL, 10);\n/*!40000 ALTER TABLE `emp`\n  ENABLE KEYS */;\nUNLOCK TABLES;\n\n--\n-- Table structure for table `salgrade`\n--\n\nDROP TABLE IF EXISTS `salgrade`;\n/*!40101 SET @saved_cs_client = @@character_set_client */;\n/*!40101 SET character_set_client = utf8 */;\nCREATE TABLE `salgrade` (\n  `GRADE` INT(11) DEFAULT NULL,\n  `LOSAL` INT(11) DEFAULT NULL,\n  `HISAL` INT(11) DEFAULT NULL\n)\n  ENGINE = InnoDB\n  DEFAULT CHARSET = utf8;\n/*!40101 SET character_set_client = @saved_cs_client */;\n\n--\n-- Dumping data for table `salgrade`\n--\n\nLOCK TABLES `salgrade` WRITE;\n/*!40000 ALTER TABLE `salgrade`\n  DISABLE KEYS */;\nINSERT INTO `salgrade` VALUES (1, 700, 1200), (2, 1201, 1400), (3, 1401, 2000), (4, 2001, 3000), (5, 3001, 9999);\n/*!40000 ALTER TABLE `salgrade`\n  ENABLE KEYS */;\nUNLOCK TABLES;\n/*!40103 SET TIME_ZONE = @OLD_TIME_ZONE */;\n\n/*!40101 SET SQL_MODE = @OLD_SQL_MODE */;\n/*!40014 SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS */;\n/*!40014 SET UNIQUE_CHECKS = @OLD_UNIQUE_CHECKS */;\n/*!40101 SET CHARACTER_SET_CLIENT = @OLD_CHARACTER_SET_CLIENT */;\n/*!40101 SET CHARACTER_SET_RESULTS = @OLD_CHARACTER_SET_RESULTS */;\n/*!40101 SET COLLATION_CONNECTION = @OLD_COLLATION_CONNECTION */;\n/*!40111 SET SQL_NOTES = @OLD_SQL_NOTES */;\n\n-- Dump completed on 2016-07-20 11:10:57\n\n\nshow tables from scott;\n\ndesc scott.emp;\nselect *\nfrom scott.emp;\ndesc scott.dept;\nselect *\nfrom scott.dept;\ndesc scott.salgrade;\n")])])]),a("h3",{attrs:{id:"练习题-一"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#练习题-一"}},[e._v("#")]),e._v(" 练习题(一)")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# 1. 查找部门 30 中员工的详细信息\nselect *\nfrom scott.emp\nwhere DEPTNO = 30;\n# 2. 找出从事 clerk 工作的员工的编号、姓名、部门号\nselect EMPNO, ENAME, DEPTNO\nfrom scott.emp\nwhere JOB = 'clerk';\n# 3. 检索出奖金多于基本工资的员工信息\nselect *\nfrom scott.emp\nwhere COMM > SAL;\n# 4. 检索出奖金多于基本工资 30% 员工信息\nselect *\nfrom scott.emp\nwhere COMM > SAL * 0.3;\n# 5. 希望看到 10 部门的经理或者 20 部门的职员 clerk 的信息\nselect *\nfrom scott.emp\nwhere (DEPTNO = 10 and JOB = 'manager')\n   or (DEPTNO = 20 and JOB = 'clerk');\n# 6. 找出 10 部门的经理、20 部门的职员或者既不是经理也不是职员但是高于 2000 元的员工信息\nselect *\nfrom scott.emp\nwhere (DEPTNO = 10 and JOB = 'manager')\n   or (DEPTNO = 20 and JOB = 'clerk')\n   or (JOB <> 'manager' and JOB <> 'clerk' and SAL > 2000);\n# 7. 找出获得奖金的员工的工作\nselect JOB, COMM\nfrom scott.emp\nwhere COMM > 0;\n# 8. 找出奖金少于 100 或者没有获得奖金的员工的信息\nselect *\nfrom scott.emp\nwhere COMM < 100\n   or COMM is null;\n# 9. 查找员工雇佣日期是当月的最后一天的员工信息\nselect *\nfrom scott.emp\nwhere HIREDATE = last_day(HIREDATE);\n# 10. 检索出雇佣年限超过 35 年的员工信息\nselect *\nfrom scott.emp\nwhere date_add(HIREDATE, interval 35 year) < now();\n# 11. 找出姓名以 A、B、S 开始的员工信息\nselect ENAME\nfrom scott.emp\nWHERE substr(ENAME, 1, 1) IN ('a', 'b', 's');\n# 12. 找到名字长度为 4 个字符的员工信息\nselect *\nfrom scott.emp\nwhere length(ENAME) = 4;\n# 13. 名字中不包含 R 字符的员工信息\nselect *\nfrom scott.emp\nwhere ENAME not like '%r%';\n# 14. 找出员工名字的前3个字符\nselect ENAME, substr(ENAME, 1, 3)\nfrom scott.emp;\n# 15. 将名字中 A 改为 a\nselect ENAME, replace(ENAME, 'a', 'A')\nfrom scott.emp;\n# 16. 将员工的雇佣日期拖后 10 年\nselect HIREDATE, date_add(HIREDATE, interval 10 year)\nfrom scott.emp;\n# 17. 返回员工的详细信息并按姓名排序\nselect *\nfrom scott.emp\norder by ENAME;\n# 18. 返回员工的信息并按员工的工作年限降序排列\nselect *\nfrom scott.emp\norder by HIREDATE;\n# 19. 返回员工的信息并按工作降序、工资升序排列\nselect *\nfrom scott.emp\norder by JOB desc, sal + ifnull(COMM, 0);\n# 20. 返回员工的姓名、雇佣年份和月份，并按月份和雇佣日期排序\nselect ENAME, year(HIREDATE), month(HIREDATE), HIREDATE\nfrom scott.emp\norder by 3, HIREDATE;\n# 21. 计算员工的日薪，每月按 30 天\nselect round((SAL + ifnull(COMM, 0)) / 30, 2)\nfrom scott.emp;\n# 22. 找出 2 月份雇佣的员工\nselect *\nfrom scott.emp\nwhere month(HIREDATE) = 9;\n# 23. 至今为止，员工被雇佣的天数\nselect ENAME, HIREDATE, datediff(now(), HIREDATE)\nfrom scott.emp;\n# 24. 找出姓名中包含 A 的员工信息\nselect *\nfrom scott.emp\nwhere ENAME like '%a%';\n# 25. 计算出员工被雇佣了多少年、多少月、多少日\n")])])]),a("h3",{attrs:{id:"练习题-二"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#练习题-二"}},[e._v("#")]),e._v(" 练习题(二)")]),e._v(" "),a("div",{staticClass:"language-mysql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# 1. 返回拥有员工的部门名、部门号\nselect distinct d.DNAME, d.DEPTNO\nfrom scott.emp e\n       join scott.dept d\n            on e.DEPTNO = d.DEPTNO;\n# 2. 工资多于 scott 的员工信息\nselect *\nfrom scott.emp\nwhere (SAL + ifnull(COMM, 0)) > (\n  select (SAL + ifnull(COMM, 0))\n  from scott.emp\n  where ENAME = 'sco_tt'\n);\n# 3. 返回员工和所属经理的姓名?\nselect e1.ENAME, e2.ENAME\nfrom scott.emp e1\n       join scott.emp e2\n            on e1.MGR = e2.EMPNO;\n# 4. 返回雇员的雇佣日期早于其经理雇佣日期的员工及其经理姓名\nselect e1.ENAME, e2.ENAME\nfrom scott.emp e1\n       join scott.emp e2\n            on e1.MGR = e2.EMPNO\nwhere e1.HIREDATE < e2.HIREDATE;\n# 5. 返回员工姓名及其所在的部门名称\nselect e.ENAME, d.DNAME\nfrom scott.emp e\n       join scott.dept d\n            on e.DEPTNO = d.DEPTNO;\n# 6. 返回从事 clerk 工作的员工姓名和所在部门名称\nselect e.ENAME, d.DNAME\nfrom scott.emp e\n       join scott.dept d\n            on e.DEPTNO = d.DEPTNO\nwhere e.JOB = 'clerk';\n# 7. 返回部门号及其本部门的最低工资\nselect DEPTNO, min(sal + ifnull(COMM, 0))\nfrom scott.emp\ngroup by DEPTNO;\n# 8. 返回销售部 sales 所有员工的姓名\nselect e.ENAME\nfrom scott.emp e\n       join scott.dept d\n            on e.DEPTNO = d.DEPTNO\nwhere d.DNAME = 'sales';\n# 9. 返回工资多于平均工资的员工\nselect *\nfrom scott.emp\nwhere (sal + ifnull(COMM, 0)) > (\n  select avg(sal + ifnull(COMM, 0))\n  from scott.emp\n);\n# 10. 返回与 scott 从事相同工作的员工\nselect *\nfrom scott.emp\nwhere JOB = (\n  select JOB\n  from scott.emp\n  where ENAME = 'sco_tt'\n);\n# 11. 返回比 30 部门员工平均工资高的员工姓名与工资\nselect *\nfrom scott.emp\nwhere SAL + ifnull(comm, 0) > (\n  select avg(sal + ifnull(COMM, 0))\n  from scott.emp\n  where DEPTNO = 30\n);\n# 12. 返回工资高于30部门所有员工工资的员工信息\nselect *\nfrom scott.emp\nwhere SAL + ifnull(comm, 0) > (\n  select max(sal + ifnull(COMM, 0))\n  from scott.emp\n  where DEPTNO = 30\n);\n# 13. 返回部门号、部门名、部门所在位置及其每个部门的员工总数\nselect d.DEPTNO, d.DNAME, d.LOC, count(e.ENAME)\nfrom scott.emp e\n       right join scott.dept d\n                  on e.DEPTNO = d.DEPTNO\ngroup by d.DEPTNO;\n# 14. 返回员工的姓名、所在部门名及其工资\nselect e.ENAME, d.DNAME, e.SAL + ifnull(e.COMM, 0)\nfrom scott.emp e\n       join scott.dept d\n            on e.DEPTNO = d.DEPTNO;\n# 15. 返回雇员表中不在同一部门但是从事相同工作的员工信息\nselect e1.ENAME, e2.ENAME\nfrom scott.emp e1\n       join scott.emp e2\nwhere e1.DEPTNO <> e2.DEPTNO\n  and e1.JOB = e2.JOB;\n# 16. 返回员工的详细信息，包括部门名\nselect e.*, d.DNAME\nfrom scott.emp e\n       join scott.dept d\n            on e.DEPTNO = d.DEPTNO;\n# 17. 返回员工工作及其从事此工作的最低工资\nselect JOB, min(sal + ifnull(COMM, 0))\nfrom scott.emp\ngroup by job;\n# 18. 返回不同部门经理的最低工资\nselect deptno, min(sal + ifnull(COMM, 0))\nfrom scott.emp\nwhere JOB = 'manager'\ngroup by DEPTNO;\n\nselect *\nfrom scott.emp\nwhere DEPTNO = 20;\n# 19. 计算出员工的年薪，并且以年薪排序\nselect (sal + ifnull(comm, 0)) * 12\nfrom scott.emp\norder by 1;\n# 20. 返回工资处于第 4 级别的员工的姓名\nselect e.ENAME, s.GRADE\nfrom scott.salgrade s\n       join scott.emp e\n            on e.SAL + ifnull(e.COMM, 0) between s.LOSAL and s.HISAL\nwhere s.GRADE = 4;\n")])])]),a("hr"),e._v(" "),a("Valine")],1)}),[],!1,null,null,null);t.default=s.exports}}]);